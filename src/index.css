
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;600;700;800;900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Rajdhani:wght@300;400;500;600;700&display=swap');
@import url('https://fonts.geist-ui.dev/font.css');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 260 30% 10%;
    --foreground: 0 0% 100%;
    --card: 260 30% 12%;
    --card-foreground: 0 0% 100%;
    --popover: 260 30% 12%;
    --popover-foreground: 0 0% 100%;
    --primary: 260 60% 65%;
    --primary-foreground: 0 0% 100%;
    --secondary: 300 95% 70%;
    --secondary-foreground: 0 0% 100%;
    --muted: 260 20% 20%;
    --muted-foreground: 260 5% 75%;
    --accent: 195 100% 60%;
    --accent-foreground: 0 0% 100%;
    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 100%;
    --border: 260 20% 30%;
    --input: 260 20% 30%;
    --ring: 260 60% 65%;
    --radius: 0.75rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground font-rajdhani antialiased;
    font-feature-settings: "rlig" 1, "calt" 1;
  }
}

.glass {
  @apply bg-white/10 backdrop-blur-lg;
  border: 1px solid transparent;
  background-clip: padding-box;
  position: relative;
}

.glass::before {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: inherit;
  padding: 1px;
  background: linear-gradient(225deg, rgba(155, 135, 245, 0.5), rgba(217, 70, 239, 0.4));
  -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
  mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  pointer-events: none;
}

.glass-hover {
  @apply transition-all duration-300 hover:bg-white/15;
}

.text-gradient {
  @apply bg-clip-text text-transparent bg-gradient-to-r from-primary to-secondary;
}

.button-gradient {
  @apply bg-gradient-to-r from-primary to-secondary hover:opacity-90 transition-opacity rounded-full;
}

.neon-border {
  position: relative;
}

.neon-border::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: inherit;
  padding: 2px;
  background: linear-gradient(45deg, #9b87f5, #D946EF, #33C3F0);
  -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
  mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  pointer-events: none;
  opacity: 0.8;
}

.shimmer {
  background: linear-gradient(90deg, 
    rgba(255,255,255,0) 0%, 
    rgba(255,255,255,0.08) 50%, 
    rgba(255,255,255,0) 100%
  );
  background-size: 200% 100%;
  animation: shimmer 2s infinite;
}

.futuristic-text {
  @apply font-orbitron tracking-wider;
}

.content-grid {
  --padding-inline: 1.5rem;
  --content-max-width: 70ch;
  --breakout-max-width: 85ch;

  --breakout-size: calc(
    (var(--breakout-max-width) - var(--content-max-width)) / 2
  );

  display: grid;
  grid-template-columns:
    [full-start] minmax(var(--padding-inline), 1fr)
    [breakout-start] minmax(0, var(--breakout-size))
    [content-start] min(
      100% - (var(--padding-inline) * 2),
      var(--content-max-width)
    )
    [content-end]
    minmax(0, var(--breakout-size)) [breakout-end]
    minmax(var(--padding-inline), 1fr) [full-end];
}

.content-grid > * {
  grid-column: content;
}

.content-grid > .full-width {
  grid-column: full;
}

.content-grid > .breakout {
  grid-column: breakout;
}

.floating-text {
  animation: float 6s ease-in-out infinite;
}
